thisyear<-alldata
thisyear$sumage<-round(thisyear$ageattestyr,digits=0)
thisyear$birthmonth<-month(as.POSIXlt(thisyear$DateOfBirth, format="%Y-%m-%d"))
thisyear$assmonth<-month(as.POSIXlt(thisyear$AssessmentDate, format="%Y-%m"))
thisyear$class<-0
thisyear$class<-ifelse(thisyear$ageattestyr==4,0,NA) #All 4 year olds are in Reception

thisyear$class<-ifelse(thisyear$ageattestyr==5,1,thisyear$class) #most 5 year olds are in year one
thisyear$class<-ifelse(thisyear$birthmonth>=9 & thisyear$ageattestyr==5 &thisyear$assmonth>8,0,thisyear$class) #5 year olds that have a birthday from September onwards that are measured in the autumn term are in Reception
thisyear$class<-ifelse(thisyear$birthmonth<=thisyear$assmonth & thisyear$ageattestyr==5 &thisyear$assmonth<=8,0,thisyear$class) #5 year olds with a birthday before September that are measured in the spring term are in Reception

thisyear$class<-ifelse(thisyear$ageattestyr==6,2,thisyear$class) # most 6 year olds are in year 2
thisyear$class<-ifelse(thisyear$birthmonth>=9 & thisyear$ageattestyr==6&thisyear$assmonth>8,1,thisyear$class) #6 year olds that have a birthday from September onwards that are measured in the autumn term are in yr1
thisyear$class<-ifelse(thisyear$birthmonth<=thisyear$assmonth & thisyear$ageattestyr==6 &thisyear$assmonth<=8,1,thisyear$class) #6 year olds with a birthday before September that are measured in the spring term are in Reception

thisyear$class<-ifelse(thisyear$ageattestyr==7,3,thisyear$class) # most 7 year olds are in year 3
thisyear$class<-ifelse(thisyear$birthmonth>=9 & thisyear$ageattestyr==7 &thisyear$assmonth>8,2,thisyear$class) #7 year olds that have a birthday from September onwards that are measured in the autumn term are in yr2
thisyear$class<-ifelse(thisyear$birthmonth<=thisyear$assmonth & thisyear$ageattestyr==7 &thisyear$assmonth<=8,2,thisyear$class) #7 year olds with a birthday before September that are measured in the spring term are in yr1

thisyear$class<-ifelse(thisyear$ageattestyr==8,4,thisyear$class) # most 8 year olds are in year 4
thisyear$class<-ifelse(thisyear$birthmonth>=9 & thisyear$ageattestyr==8 &thisyear$assmonth>8,3,thisyear$class) #8 year olds that have a birthday from September onwards that are measured in the autumn term are in yr3
thisyear$class<-ifelse(thisyear$birthmonth<=thisyear$assmonth & thisyear$ageattestyr==8 &thisyear$assmonth<=8,3,thisyear$class) #8 year olds with a birthday before September that are measured in the spring term are in yr3

thisyear$class<-ifelse(thisyear$ageattestyr==9,5,thisyear$class) # most 9 year olds are in year 5
thisyear$class<-ifelse(thisyear$birthmonth>=9 & thisyear$ageattestyr==9 &thisyear$assmonth>8,4,thisyear$class) #9 year olds that have a birthday from September onwards that are measured in the autumn term are in yr4
thisyear$class<-ifelse(thisyear$birthmonth<=thisyear$assmonth & thisyear$ageattestyr==9 &thisyear$assmonth<=8,4,thisyear$class) #9 year olds with a birthday before September that are measured in the spring term are in yr4

thisyear$class<-ifelse(thisyear$ageattestyr==10,6,thisyear$class) # most 10 year olds are in year 6
thisyear$class<-ifelse(thisyear$birthmonth>=9 & thisyear$ageattestyr==10 &thisyear$assmonth>8,5,thisyear$class) #10 year olds that have a birthday from September onwards that are measured in the autumn term are in yr5
thisyear$class<-ifelse(thisyear$birthmonth<=thisyear$assmonth & thisyear$ageattestyr==10 &thisyear$assmonth<=8,5,thisyear$class) #10 year olds with a birthday before September that are measured in the spring term are in yr5

thisyear$class<-ifelse(thisyear$ageattestyr==11,6,thisyear$class)
champ2<-thisyear
attach(champ2)
champ2$class<-as.numeric(champ2$class)

#CHOOSE FIRST WEIGHT CATEGORY RECORDED PER YEAR WHERE THERE ARE MULTIPLE MEASUREMENTS WITHIN A YEAR

d<-duplicated(champ2[,c(1,3)],fromLast=FALSE)
table(d)
#40 children have multiple measurements within a year
head(champ2[d,],n=10)
champ2<-champ2[!d,]

#DRAW IN BMI THRESHOLD TO WORK OUT CENTILES FOR OVERWEIGHT, OBESE, SEVERELY OBESE
champ2$weightcat<-1#normal
champ2$weightcat<-ifelse(champ2$Centile_BMI>=90.879,2,champ2$weightcat)#overweight
champ2$weightcat<-ifelse(champ2$Centile_BMI>=97.725,3,champ2$weightcat)#obese
champ2$weightcat<-ifelse(champ2$Centile_BMI<2.275,4,champ2$weightcat)#underweight
champ2$weightcat<-ifelse(champ2$Centile_BMI>=99.617,5,champ2$weightcat)#severe
champ2$weightcat<-ifelse(champ2$Centile_BMI<0.383,6,champ2$weightcat)#very underweight
table(champ2$weightcat)
champ2$NoRecords<-1
alldata<-champ2
attach(alldata)

#Assign class at test vector
alldata$Recordr<-as.numeric(ifelse(class==0,1,0))
alldata$Record1<-as.numeric(ifelse(class==1,1,0))
alldata$Record2<-as.numeric(ifelse(class==2,1,0))
alldata$Record3<-as.numeric(ifelse(class==3,1,0))
alldata$Record4<-as.numeric(ifelse(class==4,1,0))
alldata$Record5<-as.numeric(ifelse(class==5,1,0))
alldata$Record6<-as.numeric(ifelse(class==6,1,0))

#Print BMI at each test
alldata$BMIr<-as.numeric(ifelse(class==0,BMI,NA))
alldata$BMI1<-as.numeric(ifelse(class==1,BMI,NA))
alldata$BMI2<-as.numeric(ifelse(class==2,BMI,NA))
alldata$BMI3<-as.numeric(ifelse(class==3,BMI,NA))
alldata$BMI4<-as.numeric(ifelse(class==4,BMI,NA))
alldata$BMI5<-as.numeric(ifelse(class==5,BMI,NA))
alldata$BMI6<-as.numeric(ifelse(class==6,BMI,NA))

#Print weightcat at each age
alldata$weightcatr<-as.numeric(ifelse(class==0,weightcat,NA))
alldata$weightcat1<-as.numeric(ifelse(class==1,weightcat,NA))
alldata$weightcat2<-as.numeric(ifelse(class==2,weightcat,NA))
alldata$weightcat3<-as.numeric(ifelse(class==3,weightcat,NA))
alldata$weightcat4<-as.numeric(ifelse(class==4,weightcat,NA))
alldata$weightcat5<-as.numeric(ifelse(class==5,weightcat,NA))
alldata$weightcat6<-as.numeric(ifelse(class==6,weightcat,NA))
attach(alldata)

#Print centile at each age
alldata$centr<-as.numeric(ifelse(class==0,Centile_BMI,NA))
alldata$cent1<-as.numeric(ifelse(class==1,Centile_BMI,NA))
alldata$cent2<-as.numeric(ifelse(class==2,Centile_BMI,NA))
alldata$cent3<-as.numeric(ifelse(class==3,Centile_BMI,NA))
alldata$cent4<-as.numeric(ifelse(class==4,Centile_BMI,NA))
alldata$cent5<-as.numeric(ifelse(class==5,Centile_BMI,NA))
alldata$cent6<-as.numeric(ifelse(class==6,Centile_BMI,NA))
attach(alldata)

#Print date at each age
alldata$dr<-as.numeric(ifelse(class==0,AssessmentDate,NA))
alldata$d1<-as.numeric(ifelse(class==1,AssessmentDate,NA))
alldata$d2<-as.numeric(ifelse(class==2,AssessmentDate,NA))
alldata$d3<-as.numeric(ifelse(class==3,AssessmentDate,NA))
alldata$d4<-as.numeric(ifelse(class==4,AssessmentDate,NA))
alldata$d5<-as.numeric(ifelse(class==5,AssessmentDate,NA))
alldata$d6<-as.numeric(ifelse(class==6,AssessmentDate,NA))
attach(alldata)

#Determine how many measurements taken per child

alldata$NoRecords<-(Recordr+Record1+Record2+Record3+Record4+Record5+Record6)
Recs<-aggregate(alldata$NoRecords, by=list(Category=ChildID), FUN=sum)
names(Recs)[names(Recs)=="x"] <- "NoRecs"
names(Recs)[names(Recs)=="Category"] <- "ChildID"

##############################################################################

#Merge to have BMI at different ages on the same line

Recs2<-Recs[Recs$NoRecs==2,]
multipleb<-alldata[alldata$ChildID %in% Recs2$ChildID,] #children measured more than once
multipleb<-with(multipleb, multipleb[order(ChildID),])
attach(multipleb)
as.numeric(c(weightcatr,weightcat1,weightcat2,weightcat3,weightcat4,weightcat5,weightcat6, BMIr,BMI1,BMI2,BMI3,BMI4,BMI5,BMI6))
multipleb$ChildID<-as.factor(multipleb$ChildID)
multipleb$IsAccountRegistered<-as.numeric(multipleb$IsAccountRegistered)-1
multiplebase<-multipleb[,c(1,12)]
multiplefirst<-multipleb[!is.na(multipleb$weightcatr),c(1, 38)]
multiple1<-multipleb[!is.na(multipleb$weightcat1),c(1, 39)]
multiple2<-multipleb[!is.na(multipleb$weightcat2),c(1, 40)]
multiple3<-multipleb[!is.na(multipleb$weightcat3),c(1, 41)]
multiple4<-multipleb[!is.na(multipleb$weightcat4),c(1, 42)]
multiple5<-multipleb[!is.na(multipleb$weightcat5),c(1, 43)]
multiple6<-multipleb[!is.na(multipleb$weightcat6),c(1, 44)]
multiple7<-multipleb[!is.na(multipleb$centr),c(1, 45)]
multiple8<-multipleb[!is.na(multipleb$cent1),c(1, 46)]
multiple9<-multipleb[!is.na(multipleb$cent2),c(1, 47)]
multiple10<-multipleb[!is.na(multipleb$cent3),c(1, 48)]
multiple11<-multipleb[!is.na(multipleb$cent4),c(1, 49)]
multiple12<-multipleb[!is.na(multipleb$cent5),c(1, 50)]
multiple13<-multipleb[!is.na(multipleb$cent6),c(1, 51)]
multiple14<-multipleb[!is.na(multipleb$IsAccountRegistered),c(1, 10)]
multipleb$ageattestyr<-as.numeric(multipleb$ageattestyr)
multiplec<-aggregate(multipleb$ageattestyr,by=list(multipleb$ChildID),FUN=min)
colnames(multiplec)<- c("ChildID","AgeF")
multipled<-aggregate(as.numeric(multipleb$Gender),by=list(ChildID),FUN=min)
colnames(multipled)<- c("ChildID","Gender")

Ethnicity2<-multipleb$Ethnicity
levels(Ethnicity2)[1:3]<-"White"
levels(Ethnicity2)[11:12]<-"Black African and other"
levels(Ethnicity2)[2:3]<-"Mixed black and white"
levels(Ethnicity2)[9:10]<-"Black"
levels(Ethnicity2)[5:6]<-"Indian/Pakistani"
levels(Ethnicity2)[3]<-"Asian"
levels(Ethnicity2)[5:7]<-"Asian"
levels(Ethnicity2)[4]<-"other"
levels(Ethnicity2)[7]<-"other"
levels(Ethnicity2)[6]<-"Asian"
levels(Ethnicity2)[7]<-"NA"
levels(Ethnicity2)[4]<-"NA"
levels(Ethnicity2)[6]<-"NA"
levels(Ethnicity2)[4]<-"other"
levels(Ethnicity2)[2]<-"other"

multipleb$Ethnicity2<-Ethnicity2
attach(multipleb)
multiplee<-aggregate(as.numeric(multipleb$Ethnicity2),by=list(multipleb$ChildID),FUN=min)
colnames(multiplee)<- c("ChildID","Eth2")
multiplereg<-multipleb[c(1, 10)]
library(plyr)

multi<-merge(multiplebase,multiplefirst,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple1,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple2,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple3,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple4,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple5,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple6,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiplec,by="ChildID",all.x=TRUE)
multi<-merge(multi,multipled,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiplee,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple7,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple8,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple9,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple10,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple11,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple12,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple13,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple14,by="ChildID",all.x=TRUE)
attach(multi)

multi2<-aggregate(multi,by=list(multi$ChildID),FUN=mean)
multi2$ChildID<-multi2$Group.1
multi<-multi2

#CALCULATE DIFF BETWEEN MEASUREMENTS
length(multi$ChildID)#25024
attach(multi)
multi$measure1<-multi$centr
multi$measure1<-as.numeric(multi$measure1)
multi$measure1<-ifelse(is.na(multi$measure1)&multi$cent1>=1,paste(multi$cent1),multi$measure1)
multi$measure1<-as.numeric(multi$measure1)
multi$measure1<-ifelse(is.na(multi$measure1)&multi$cent2>=1,paste(multi$cent2),measure1)
multi$measure1<-as.numeric(multi$measure1)
multi$measure1<-ifelse(is.na(multi$measure1)&multi$cent3>=1,paste(multi$cent3),multi$measure1)
multi$measure1<-as.numeric(multi$measure1)
multi$measure1<-ifelse(is.na(multi$measure1)&multi$cent4>=1,paste(multi$cent4),multi$measure1)
multi$measure1<-as.numeric(multi$measure1)
multi$measure1<-ifelse(is.na(multi$measure1)&multi$cent5>=1,paste(multi$cent5),multi$measure1)
multi$measure1<-as.numeric(multi$measure1)

measure2<-ifelse(!is.na(centr),paste(cent1),NA)
measure2<-as.numeric(measure2)
measure2<-ifelse(is.na(measure2)&(!is.na(centr)|!is.na(cent1)),paste(cent2),measure2)
measure2<-as.numeric(measure2)
measure2<-ifelse(is.na(measure2)&(!is.na(centr)|!is.na(cent1)|!is.na(cent2)),paste(cent3),measure2)
measure2<-as.numeric(measure2)
measure2<-ifelse(is.na(measure2)&(!is.na(centr)|!is.na(cent1)|!is.na(cent2)|!is.na(cent3)),paste(cent4),measure2)
measure2<-as.numeric(measure2)
measure2<-ifelse(is.na(measure2)& (!is.na(centr)|!is.na(cent1)|!is.na(cent2)|!is.na(cent3)|!is.na(cent4))&cent5>=1,paste(cent5),measure2)
measure2<-as.numeric(measure2)
measure2<-ifelse(is.na(measure2)& (!is.na(centr)|!is.na(cent1)|!is.na(cent2)|!is.na(cent3)|!is.na(cent4)|!is.na(cent5))&cent6>=1,paste(cent6),measure2)
measure2<-as.numeric(measure2)

multi$measure2<-measure2

measurea<-as.numeric(weightcatr)
measurea<-as.numeric(measurea)
measurea<-ifelse(is.na(measurea)&!is.na(weightcat1),paste(weightcat1),measurea)
measurea<-as.numeric(measurea)
measurea<-ifelse(is.na(measurea)&!is.na(weightcat2),paste(weightcat2),measurea)
measurea<-as.numeric(measurea)
measurea<-ifelse(is.na(measurea)&!is.na(weightcat3),paste(weightcat3),measurea)
measurea<-as.numeric(measurea)
measurea<-ifelse(is.na(measurea)&!is.na(weightcat4),paste(weightcat4),measurea)
measurea<-as.numeric(measurea)
measurea<-ifelse(is.na(measurea)&!is.na(weightcat5),paste(weightcat5),measurea)
measurea<-as.numeric(measurea)
measurea<-ifelse(is.na(measurea)&!is.na(weightcat6),paste(weightcat6),measurea)

measureb<-as.numeric(weightcat6)
measureb<-ifelse(is.na(measureb)&(!is.na(weightcat5)),paste(weightcat5),measureb)
measureb<-as.numeric(measureb)
measureb<-ifelse(is.na(measureb)&(!is.na(weightcat4)),paste(weightcat4),measureb)
measureb<-as.numeric(measureb)
measureb<-ifelse(is.na(measureb)&(!is.na(weightcat3)),paste(weightcat3),measureb)
measureb<-as.numeric(measureb)
measureb<-ifelse(is.na(measureb)&(!is.na(weightcat2)),paste(weightcat2),measureb)
measureb<-as.numeric(measureb)
measureb<-ifelse(is.na(measureb)& (!is.na(weightcat1)),paste(weightcat1),measureb)
measureb<-ifelse(is.na(measureb)& (!is.na(weightcatr)),paste(weightcatr),measureb)
multi$measurea<-as.numeric(measurea)
multi$measureb<-as.numeric(measureb)
attach(multi)

table(multi$IsAccountRegistered)
table(multi$measurea,multi$measureb)

attach(multi)
#SET UP CASES AND CONTROLS
#Find difference over couse of 1 year
multi$bmidecile<-findInterval(multi$measure1,c(10,20,30,40,50,60,70,80,90,100))

multi$imdquintile<-findInterval(multi$PostcodeDecile,c(0,2,4,6,8,10))
attach(multi)

multi$IsAccountRegistered<-as.factor(multi$IsAccountRegistered)
#CREATE SUBSETS BY BMI CATEGORY USING CLINICAL THRESHOLDS

over<-multi[as.numeric(multi$measure1)>=90.879&as.numeric(multi$measure1)<97.725,]
over<-over[!is.na(over$ChildID),]
normal<-multi[multi$measure1>=2.275&multi$measure1<90.879,]
normal<-normal[!is.na(normal$ChildID),]
obese<-multi[multi$measure1>97.725,]
obese<-obese[!is.na(obese$ChildID),]


#MATCH CASES AND CONTROLS
##############################################


library(MatchIt)#missing data cause failure even if they are in fields not included in the matching terms
set.seed(1234)
match.ov<- matchit(IsAccountRegistered~AgeF+Gender+Eth2+bmidecile+imdquintile,data=over[,c(2,11:13,21:22,24:26,29)], method="exact", ratio=2)
match.no<- matchit(IsAccountRegistered~AgeF+Gender+Eth2+bmidecile+imdquintile,data=normal[,c(2,11:13,21:22,24:26,29)], method="exact", ratio=2)
match.ob<- matchit(IsAccountRegistered~AgeF+Gender+Eth2+bmidecile+imdquintile,data=obese[,c(2,11:13,21:22,24:26,29)], method="exact", ratio=2)

matchd.no<- match.data(match.no,group="all", distance="distance",weights="weights", subclass="subclass")
matchd.ob<- match.data(match.ob,group="all", distance="distance",weights="weights", subclass="subclass")
matchd.ov<- match.data(match.ov,group="all", distance="distance",weights="weights", subclass="subclass")

normno<-matchd.no[matchd.no$IsAccountRegistered==0,]
normyes<-matchd.no[matchd.no$IsAccountRegistered==1,]

obyes<-matchd.ob[matchd.ob$IsAccountRegistered==1,]
obno<-matchd.ob[matchd.ob$IsAccountRegistered==0,]

ovyes<-matchd.ov[matchd.ov$IsAccountRegistered==1,]
ovno<-matchd.ov[matchd.ov$IsAccountRegistered==0,]
