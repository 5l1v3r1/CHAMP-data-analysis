
alldata<-read.table("LMStableedited.csv",header=TRUE, sep=",")
length(alldata$ChildID)
alldata<-subset(alldata,!is.na(alldata$BMI),)
length(alldata$ChildID) #44 records removed
alldata$ChildID<-as.factor(alldata$ChildID)
levels(alldata$ChildID) #63339 children
alldata$PostcodeDecile<-ceiling(alldata$PostcodeDecile)
alldata<-alldata[floor(alldata$ageattest/52.12)<12&floor(alldata$ageattest/52.12)>3,]

alldata2<-alldata[order(alldata$ChildID,alldata$AssessmentDate),]
names(alldata2)
d<-duplicated(alldata2[,c(1,4)])
head(alldata2[d,],n=10)
length(unique(alldata2$ChildID[d])) #133 children have multiple measures on the same date 
#d4<-alldata2[alldata2$ChildID %in% alldata2$ChildID[d],]
#write.csv(d4,file="d4.csv")
#Manually review for ID reuse, save subset of reused IDs.
d4<-read.csv("d4.csv")
length(unique(d4$ChildID))
alldata2<-alldata2[!alldata2$ChildID %in% d4$ChildID,]
alldata2<-alldata2[!d,]
library(lubridate)
alldata$DateOfBirth<-(as.Date(paste(alldata$DateOfBirth,"-01",sep="")))
alldata$AssessmentDate<-as.Date(paste(alldata$AssessmentDate,"-01",sep=""))
alldata$assyr<-year(as.POSIXlt(alldata$AssessmentDate, format="%Y-%m-%d"))

attach(alldata)
alldata$ChildID<-as.factor(alldata$ChildID)
alldata$SchoolCode<-as.factor(alldata$SchoolCode)
alldata$IsAccountRegistered<-as.factor(alldata$IsAccountRegistered)

alldata<-alldata[!alldata$AcademicYear=="2011/2012"&!alldata$AcademicYear=="2012/2013",]
alldata$AcademicYear <- droplevels(alldata$AcademicYear)
champ2<-alldata

champ2$weightcat<-1#normal
champ2$weightcat<-ifelse(champ2$Centile_BMI>=90.879,2,champ2$weightcat)#overweight
champ2$weightcat<-ifelse(champ2$Centile_BMI>=97.725,3,champ2$weightcat)#obese
champ2$weightcat<-ifelse(champ2$Centile_BMI<2.275,4,champ2$weightcat)#underweight
champ2$weightcat<-ifelse(champ2$Centile_BMI>=99.617,5,champ2$weightcat)#severe
champ2$weightcat<-ifelse(champ2$Centile_BMI<0.383,6,champ2$weightcat)#very underweight
table(champ2$weightcat)
champ2$NoRecords<-1
alldata<-champ2


alldata$ageattestyr<-difftime(alldata$AssessmentDate,alldata$DateOfBirth,unit="weeks")/52.12

alldata$ageattestyr<-as.integer(floor(alldata$ageattestyr))
attach(alldata)

###################################################################################
#COMPARE FIRST AND LAST MEASUREMENTS

#DRAW IN BMI THRESHOLD TO WORK OUT CENTILES FOR OVERWEIGHT, OBESE, SEVERELY OBESE

#Assign class at test vector
alldata <- alldata[order(alldata$ChildID,alldata$AssessmentDate),] #Order by child and measurement date
first<-alldata[!duplicated(alldata$ChildID),]
first$Record<-1
alldata <- alldata[order(alldata$ChildID,alldata$AssessmentDate),] #Order by child and measurement date
last<-alldata[!duplicated(alldata$ChildID,fromLast=TRUE),]
last$Record<-2
alldata<-rbind (first,last)
d5<-duplicated(alldata[,c(1,4)])
alldata<-alldata[!d5,]
attach(alldata)

#Print BMI at each test
alldata$Record1<-as.numeric(ifelse(alldata$Record==1,1,0))
alldata$Record2<-as.numeric(ifelse(alldata$Record==2,1,0))

alldata$BMI1<-as.numeric(ifelse(alldata$Record==1,BMI,NA))
alldata$BMI2<-as.numeric(ifelse(alldata$Record==2,BMI,NA))

#Print weightcat at each test
alldata$weightcat1<-as.numeric(ifelse(alldata$Record==1,weightcat,NA))
alldata$weightcat2<-as.numeric(ifelse(alldata$Record==2,weightcat,NA))

#Print centiles
alldata$cent1<-as.numeric(ifelse(alldata$Record==1,Centile_BMI,NA))
alldata$cent2<-as.numeric(ifelse(alldata$Record==2,Centile_BMI,NA))

#Print date at each age
alldata$d1<-as.numeric(ifelse(alldata$Record==1,AssessmentDate,NA))
alldata$d2<-as.numeric(ifelse(alldata$Record==2,AssessmentDate,NA))

#Print Z scores
alldata$z1<-as.numeric(ifelse(alldata$Record==1,SDS_BMI,NA))
alldata$z2<-as.numeric(ifelse(alldata$Record==2,SDS_BMI,NA))
attach(alldata)


##############################################################################

#Merge to have BMI at different ages on the same line
#Determine how many measurements taken per child

Recs2<-alldata[duplicated(alldata$ChildID),]
multiple<-alldata[alldata$ChildID %in% Recs2$ChildID,] #children measured more than once

Ethnicity2<-multiple$Ethnicity
levels(Ethnicity2)[1:3]<-"1" #white
levels(Ethnicity2)[10:12]<-"2" #black
levels(Ethnicity2)[2:3]<-"3" #mixed black and white ethnicities
levels(Ethnicity2)[3]<-"4" #asian
levels(Ethnicity2)[4]<-"5" #other
levels(Ethnicity2)[5:8]<-"4"
levels(Ethnicity2)[6]<-"4"
levels(Ethnicity2)[6]<-"5"
levels(Ethnicity2)[6:7]<-NA
multiple$Eth2<-as.numeric(Ethnicity2)
attach(multiple)
multiple10<-multiple[!is.na(multiple$Eth2),c(1, 33)]

multiple<-with(multiple, multiple[order(ChildID),])
attach(multiple)
as.numeric(c(cent1,cent2))
multiple$ChildID<-as.factor(multiple$ChildID)
multiple$IsAccountRegistered<-as.numeric(multiple$IsAccountRegistered)-1
multiplebase<-multiple[,c(1,12)]
multiple1<-multiple[!is.na(multiple$cent1),c(1, 27)]
multiple2<-multiple[!is.na(multiple$cent2),c(1, 28)]
multiple3<-multiple[c(1, 10)]
library(plyr)

multiple4<-multiple[!is.na(multiple$d1),c(1, 29)]
multiple5<-multiple[!is.na(multiple$d2),c(1, 30)]
multiple6<-multiple[!is.na(multiple$weightcat1),c(1, 25)]
multiple7<-multiple[!is.na(multiple$weightcat2),c(1, 26)]
multiple8<-multiple[!is.na(multiple$z1),c(1, 31)]
multiple9<-multiple[!is.na(multiple$z2),c(1, 32)]

multiple11<-aggregate(multiple$ageattestyr,by=list(multiple$ChildID),FUN=min)
colnames(multiple11)<- c("ChildID","AgeF")
multiple12<-aggregate(as.numeric(multiple$Gender),by=list(ChildID),FUN=min)
colnames(multiple12)<- c("ChildID","Gender")
attach(multiple)
multiple13<-multiple[!is.na(multiple$ageattestyr),c(1, 19)]
multi<-merge(multiplebase,multiple1,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple2,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple3,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple4,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple5,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple6,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple7,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple8,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple9,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple10,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple11,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple12,by="ChildID",all.x=TRUE)
multi<-merge(multi,multiple13,by="ChildID",all.x=TRUE)
attach(multi)

multi2<-aggregate(multi,by=list(multi$ChildID),FUN=mean,na.rm=TRUE)
multi2$ChildID<-multi2$Group.1
multi<-multi2


###############################################

#CALCULATE CEN DIFF BETWEEN FIRST AND LAST MEASUREMENTS
length(multi$ChildID)#34743
attach(multi)
measure1<-as.numeric(cent1)
measure2<-as.numeric(cent2)
multi$cendiff<-measure2-measure1
multi$diffnorm<-(abs(50-measure1)-abs(50-measure2)) #if positive, marks a move towards the normal
attach(multi)
multi$dir<-ifelse(multi$cendiff>0,1,0)
table(multi$IsAccountRegistered)
attach(multi)

###############################################
#BREAKPOINT
##################################
##############
#Find difference between 1st and last measurements
multi$days<-as.numeric(multi$d2)-as.numeric(multi$d1)
multi$cendiffs<-multi$cendiff/multi$days*365.25
multi$diffnorms<-abs(as.numeric(multi$cent1)-50)-abs(as.numeric(multi$cent2)-50) #if positive, marks a move towards the normal
multi<-multi[multi$cent1>=2.275,]
multi$bmidecile<-findInterval(multi$cent1,c(10,20,30,40,50,60,70,80,90))
multi$cat1<-findInterval(multi$cent1,c(10,20,30,40,50,60,70,80,90))
multi$cat2<-findInterval(multi$cent1,c(10,20,30,40,50,60,70,80,90))
multi$imdquintile<-findInterval(multi$PostcodeDecile,c(0,2,4,6,8,10))
attach(multi)

#CREATE SUBSETS BY BMI CATEGORY USING CLINICAL THRESHOLDS
multi$IsAccountRegistered<-as.factor((as.numeric(multi$IsAccountRegistered)))
multi<-multi[!is.na(multi$Eth2)&!is.na(multi$AgeF)&!is.na(multi$imdquintile)&!is.na(multi$diffnorms)&!is.na(multi$cendiffs)&!is.na(multi$bmidecile)&!is.na(multi$IsAccountRegistered)&!is.na(multi$bmidecile)&!is.na(multi$Gender),]

attach(multi)
length(multi$ChildID)

over<-multi[multi$cent1>=90.879&multi$cent1<97.725,]
normal<-multi[multi$cent1>=2.275&multi$cent1<90.879,]
obese<-multi[multi$cent1>=97.725,]

#MATCH CASES AND CONTROLS
##############################################
library(MatchIt)#missing data cause failure even if they are in fields not included in the matching terms
set.seed(1234)

match.ov<- matchit(IsAccountRegistered~AgeF+Gender+Eth2+imdquintile,data=over, method="exact", ratio=2)
match.ob<- matchit(IsAccountRegistered~AgeF+Gender+Eth2+imdquintile,data=obese, method="exact", ratio=2)
match.no<- matchit(IsAccountRegistered~AgeF+Gender+Eth2+bmidecile+imdquintile,data=normal, method="exact", ratio=2)

matchd.no<- match.data(match.no,group="all", distance="distance",weights="weights", subclass="subclass")
matchd.ob<- match.data(match.ob,group="all", distance="distance",weights="weights", subclass="subclass")
matchd.ov<- match.data(match.ov,group="all", distance="distance",weights="weights", subclass="subclass")

normno<-matchd.no[matchd.no$IsAccountRegistered==0,]
normyes<-matchd.no[matchd.no$IsAccountRegistered==1,]

obyes<-matchd.ob[matchd.ob$IsAccountRegistered==1,]
obno<-matchd.ob[matchd.ob$IsAccountRegistered==0,]

ovyes<-matchd.ov[matchd.ov$IsAccountRegistered==1,]
ovno<-matchd.ov[matchd.ov$IsAccountRegistered==0,]

#CALCULATE CENTILE CHANGE IN MATCHED CHILDREN

mean(ovyes$cendiffs)
mean(ovno$cendiffs)
mean(obno$cendiffs)
mean(obyes$cendiffs)
mean(normyes$cendiffs)
mean(normno$cendiffs)

length(obno$ChildID[obno$diffnorms>0])
length(obno$ChildID[obno$diffnorms==0])
length(obno$ChildID[obno$diffnorms<0])

length(ovno$ChildID[ovno$diffnorms>0])
length(ovno$ChildID[ovno$diffnorms==0])
length(ovno$ChildID[ovno$diffnorms<0])

length(normno$ChildID[normno$diffnorms>0])
length(normno$ChildID[normno$diffnorms==0])
length(normno$ChildID[normno$diffnorms<0])

length(obyes$ChildID[obyes$diffnorms>0])
length(obyes$ChildID[obyes$diffnorms==0])
length(obyes$ChildID[obyes$diffnorms<0])

length(ovno$ChildID[ovyes$diffnorms>0])
length(ovyes$ChildID[ovyes$diffnorms==0])
length(ovyes$ChildID[ovyes$diffnorms<0])

length(normyes$ChildID[normyes$diffnorms>0])
length(normyes$ChildID[normyes$diffnorms==0])
length(normyes$ChildID[normyes$diffnorms<0])

median(ovyes$cendiffs)
median(ovno$cendiffs)
median(obno$cendiffs)
median(obyes$cendiffs)
median(normyes$cendiffs)
median(normno$cendiffs)

mean(ovyes$diffnorms)
mean(ovno$diffnorms)
mean(obno$diffnorms)
mean(obyes$diffnorms)
mean(normyes$diffnorms)
mean(normno$diffnorms)

median(ovyes$diffnorms)
median(ovno$diffnorms)
median(obno$diffnorms)
median(obyes$diffnorms)
median(normyes$diffnorms)
median(normno$diffnorms)
